*, *::before, *::after {
    box-sizing: border-box;
    font-family: Gotham Rounded, sans-serif;
    font-weight: normal;
}

body {
    padding: 0;
    margin: 0;
    background: linear-gradient(to right, #00AAFF, #00FF6C);
}

.calculator-grid {
    display: grid; /*グリッドレイアウト*/
    justify-content: center; /*フレックスアイテムの主軸方向の揃え位置を指定*/
    align-content: center; 
    min-height: 100vh;
    grid-template-columns: repeat(4, 100px); /*列トラックの幅を指定*/
    grid-template-rows: minmax(120px, auto) repeat(5, 100px); /*行トラックの高さを指定*/
}

.calculator-grid > button {
    cursor: pointer;
    font-size: 2rem;
    border: 1px solid white;/*全ての要素の周りに1pxの白い実線の境界線*/
    outline: none;
    background-color: rgba(255, 255, 255, .75);
}

.calculator-grid > button:hover {
    background-color: rgba(255, 255, 255, .9);
}/*ホバー状態のクラス要素を選択する*/

.span-two {
    grid-column: span 2;
}

.output {
    grid-column: 1 / -1 ;
    background-color: rgba(0, 0, 0, .75);
    display: flex; /*表示をflexに変更*/
    align-items: flex-end;/*align-item:flexboxitemを配置する際上部下部、高さに合わせて自動調節が可能 flex-end:flexboxコンテナのクロス軸に合わせて下部に配置*/
    justify-content: space-around;/*flexitemの主軸方向の揃え位置を指定　space-between:フレックスコンテナの主軸の幅に対し余白を持って等間隔に配置*/
    flex-direction: column;/*フレックスコンテナの主軸の方向を指定することで、flexitemの配置方向を指定 column:コンテナの主軸の方向と起点終点の位置は、ブロック要素と同様になる*/
    padding: 10px;
    word-wrap: break-word;
    word-break: break-all;
}

.output .previous-operand {
    color: rgba(255, 255, 255, .75);
    font-size: 1.5rem;
}

.output .current-operand {
    color: white;
    font-size: 2.5rem;
}